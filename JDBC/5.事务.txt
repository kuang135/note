MySql的InnoDB引擎支持事务

DML语句,不开事务,1条语句1个事务	
	开启事务,多条语句1个事务

打开事务：conn.setAutoCommit(false);
提交事务：conn.commit();
回滚事务：conn.rollback();
设置保存点：Savepoint sp==conn.setSavepoint();
回滚事务：conn.rollback(sp);

代码演示:
	Savepoint sp=null;
	try{
	    conn.setAutoCommit(false);
	    sp=conn.setSavepoint();
	    ...
	    sp=conn.setSavepoint();
	    ...
	    sp=conn.setSavepoint();
	    ...
	}catch (Exception e){
	    conn.rollback(sp);//只回滚,不关闭
	    e.printStackTrace();
	}finnaly{
	    conn.commit();
	}

注意: 管理事务时,必须同一个Connection
      事务比较严谨,出现任何异常都要回滚
      设置回滚点的时候要根据程序的具体逻辑需求

-----------------------------------------------

事务的特性 ACID
    1.原子性(atomicity): 事务是一个不可分割的单元,要么都发生,要么都不发生
    2.一致性(consistency): 事务前后数据的完整性必须保持一致
    3.隔离性(isolation): 并发访问数据时,一个用户的事务不能被另一个用户的事务干扰
    4.持久性(durability): 事务一旦被提交，对数据库中数据的改变就是永久性的

事务的隔离级别：多个事务同时操作相同的表
    读未提交(Read uncommitted): 事务中读到另一个事务未提交的数据
	脏读(有)，不可重复读(有)，幻读(有)
    读已提交(Read committed): 事务中读到另一个事务已提交的数据
	脏读(无)，不可重复读(有)，幻读(有)
    可重复读(Repeatable read): 事务中读不到另一个事务已经提交的数据(update),insert可以读到
	脏读(无)，不可重复读(无)，幻读(有)
    可串行化(Serializable): 事务中不能操作另一个事务正在操作的表,另一个事务提交后才能操作
	脏读(无)，不可重复读(无)，幻读(无)
设置隔离级别：conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);

脏读(dirty read): 一个事务读到另一个事务未提交的数据
不可重复读(unrepeatable read): 一个事务读到另一个事务已经提交的数据,强调用update语句更改数据,
			       导致一个事务中多次读取的数据不一致
幻读(phantom read): 一个事务读到另一个事务已经提交的数据,强调用insert语句插入数据,
		    导致一个事务中多次读取的数据不一致


mysql默认Repeatable read
oracle默认Read committed

select @@tx_isolation;
set session transaction isolation level ...;
