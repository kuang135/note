变量按存储数据分类
	字符串型
	整型
	浮点型
	日期型
	数组型

bash中的默认类型都是字符串型

---------------------------------------------------------------------------------------

变量的分类：
	1.用户自定义变量 -- 当前shell中生效
		变量名=变量值
			myname=VBird -- 等号两边不能直接接空格
			var="$myname" -- VBird
			var='$myname' -- myname
		set -- 查看所有变量
		unset 变量名 -- 取消变量
	2.环境变量 -- 当前shell和所有子shell都生效
		export 变量名=变量值
		env -- 查看环境变量
	3.位置参数变量
		$n -- $0表示命令本身，$1表示命令后的第一个参数
		$* -- 返回所有参数，把所有参数当一个整体，for i in "$*" 执行一次
		$@ -- 返回所有参数，把每个参数分别对待，for i in "$@" 执行多次(参数个数)
		$# -- 返回参数个数
	4.预定义变量
		$? -- 上一个命令的返回状态，正确为0，不正确为非0
		$$ -- 当前进程的进程号(PID)
		$! -- 后台运行的最后一个进程的进程号(PID)
		      命令后加 &，表示该命令在后台运行，sudo find /opt -name hello.java &

----------------------------------------------------------------------------------------

显示变量
	echo $HOME 或者 echo ${HOME}

扩展变量，用 "$变量名" 或 ${变量名}
	PATH="$PATH":/home/bin
	PATH=${PATH}:/home/bin

键盘读取变量
	read [-pt] variable
	-p：后面可以接提示符
	-t：后面可以接等待的"秒数"
	read -p "Please keyin your name: " -t 30 named
	echo $named

声明变量
	declare [-aixr] variable
	-a：将variable定义为数组类型
	-i：将variable定义为整数数字类型
	-x：用法与 export 一样，将variable变成环境变量
	-r：将变量设置成为 readonly 类型，该变量不可被更改内容，也不能重设

数组型变量
	var[index]=content
	var[1]="small min"
	var[2]="big min"
	echo "${var[1]}, ${var[2]}"
	直接以${数组}的方式来读取，会比较正确无误。