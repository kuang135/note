grep：Global Regular Expression Print
grep [-acinv] [--color=auto] '搜寻字符串' filename
	-a：将binary文件以text文件的方式搜寻数据
	-c：计算找到'搜寻字符串'的次数
	-i：忽略大小写
	-n：顺便输出行号
	-v：反向选择，显示出没有'搜寻字符串'内容的那一行
	-A：后面加数字，除了列出该行外，后面的n行也列出来
	-B：后面加数字，除了列出该行外，前面的n行也列出来
	搜寻字符串可以是一个正则表达式

sed：一个管道命令，还可以将数据进行取代，删除，截取特定行等功能
sed [-nefr] [动作]
	-n：只有经过sed特殊处理的那一行才会被列出来
	-e：直接在指令模式上进行sed的动作编辑
	-f：直接将sed的动作写在一个文件内，-f filename
	-r：sed的动作支持的是延伸型正规表示法的语法
	-i：直接修改读取的档案内容，而部是由屏幕输出
	动作说明：[n1,[n2]]function
	n1,n2：不见得会存在，一般代表选择进行动作的行数
	function：
		a -- 新增
		c -- 取代
		d -- 删除
		i -- 插入
		p -- 打印
		s -- 取代

awk：好用的数据处理工具
	相对于sed常作用于一整个行的处理，awk更倾向于一行当中分成数个段来处理
awk '条件类型1 {动作1} 条件类型2 {动作2} ...' filename
	last -n 5 | awk 'print {$1 "\t" $3}'
		$0代表一整的数据
	awk内的变量：
		NF -- 每一行($0)拥有的字段总数
		NR -- 目前awk所处理的是第几行数据
		FS -- 目前的分隔符，默认是空格键

diff：文件对比工具，以行为单位
diff [-bBi] filename filename
	-b：忽略一行中，多个空白的差异(about me与about   me)
	-B：忽略空白行的差异
	-i：忽略大小写