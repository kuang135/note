
性能差异
	查询语句不仅要查找相匹配的文档，还需要计算每个文档的相关性，所以一般来说查询语句要比 过滤语句更耗时，并且查询结果也不可缓存。
	一般情况下，一条经过缓存的过滤查询要远胜一条查询语句的执行效率。


什么情况下使用
	原则上来说，使用查询语句做全文本搜索或其他需要进行相关性评分的时候，剩下的全部用过滤语句

--------------------------------------------------------------------------------------------
	
重要的查询过滤语句

term 过滤
	term主要用于精确匹配哪些值，比如数字，日期，布尔值或 not_analyzed的字符串(未经分析的文本数据类型)
		 { "term": { "date":   "2014-09-01" }}
		 
terms 过滤
	terms 跟 term 有点类似，但 terms 允许指定多个匹配条件。
		{
			"terms": {
				"tag": [ "search", "full_text", "nosql" ]
				}
		}
		
range 过滤
	range过滤允许我们按照指定范围查找一批数据：
		{
			"range": {
				"age": {
					"gte":  20,
					"lt":   30
				}
			}
		}
		
exists 和 missing 过滤
	exists 和 missing 过滤可以用于查找文档中是否包含指定字段或没有某个字段，类似于SQL语句中的IS_NULL条件
		{
			"exists":   {
				"field":    "title"
			}
		}

bool 过滤
	bool 过滤可以用来合并多个过滤条件查询结果的布尔逻辑，它包含一下操作符：
	must :: 多个查询条件的完全匹配,相当于 and。
	must_not :: 多个查询条件的相反匹配，相当于 not。
	should :: 至少有一个查询条件匹配, 相当于 or
		{
			"bool": {
				"must":     { "term": { "folder": "inbox" }},
				"must_not": { "term": { "tag":    "spam"  }},
				"should": [
							{ "term": { "starred": true   }},
							{ "term": { "unread":  true   }}
				]
			}
		}
		
---------------------------------------------------------------------------------------------------------------------

match_all 查询
	使用match_all 可以查询到所有文档，是没有查询条件下的默认语句。
		{
			"match_all": {}
		}
	此查询常用于合并过滤条件。

match 查询
	match查询是一个标准查询，不管你需要全文本查询还是精确查询基本上都要用到它。
	如果你使用 match 查询一个全文本字段，它会在真正查询之前用分析器先分析match一下查询字符：
		{
			"match": {
				"tweet": "About Search"
			}
		}
	如果用match下指定了一个确切值，在遇到数字，日期，布尔值或者not_analyzed 的字符串时，它将为你搜索你给定的值：
		{ "match": { "age":    26           }}
		
multi_match 查询
	multi_match查询允许你做match查询的基础上同时搜索多个字段：
		{
			"multi_match": {
				"query":    "full text search",
				"fields":   [ "title", "body" ]
			}
		}
		
bool 查询
	bool 查询与 bool 过滤相似，用于合并多个查询子句。
	不同的是，bool 过滤可以直接给出是否匹配成功， 而bool 查询要计算每一个查询子句的 _score （相关性分值）
	
-------------------------------------------------------------------------------------------------------------------

查询与过滤条件的合并
	GET /_search
	{
		"query": {
			"filtered": {
				"query":  { "match": { "email": "business opportunity" }},
				"filter": { "term": { "folder": "inbox" }}
			}
		}
	}