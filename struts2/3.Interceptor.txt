执行具体的action之前会先执行很多interceptor
    struts2-core-2.3.20.jar中有个struts-default.xml文件
    interceptor-stack标签中定义了interceptor执行的顺序
  
struts2内置拦截器:
	exception：异常处理机制拦截器
	i18n：处理中文问题 
	modelDriven：将请求参数，封装model对象（Action 实现ModelDriven接口）
	fileUpload：文件上传
	params：请求参数转换封装 
	conversionError：将类型转换异常进行处理 
	validation：请求参数校验 
	workflow：判断fieldError是否存在，如果存在，自动跳转input视图

--------------------------------------------------------------------------------------------

Interceptor中的方法:
	void init();
	void destroy();
	String intercept(ActionInvocation invocation) throws Exception;

MethodFilterInterceptor的方法:
	setExcludeMethods(String excludeMethods)
	setIncludeMethods(String includeMethods)
	protected abstract String doIntercept(ActionInvocation invocation) throws Exception;

自定义拦截器:
    1.实现com.opensymphony.xwork2.interceptor.Interceptor接口
      或者继承com.opensymphony.xwork2.interceptor.MethodFilterInterceptor
      MethodFilterInterceptor可以设置哪些方法不进行过滤拦截
      
    2.实现或覆盖String intercept(ActionInvocation invocation) throws Exception;

    3.注册拦截器
	 <package name="itcast" namespace="/test" extends="struts-default">
		<!-- 1.注册拦截器位于包首位置 -->
		<interceptors>
			<!-- 给自定义的拦截器起一个名字 -->	
			<interceptor name="myItcpt" class="cn.itcast.interceptor.MyInterceptor" />
			<!-- 自定义一个拦截器栈 -->
			<interceptor-stack name="myStack">
				<!-- 给栈添加自定义的拦截器 -->
				<interceptor-ref name="myItcpt" >
					<!-- 1.如果该拦截器继承自MethodFilterInterceptor,就可以配置不进行过滤的方法 -->
					<param name="excludeMethods">login,register</param>
				</interceptor-ref>
				<!-- 给栈添加struts2默认的拦截器栈 -->
				<interceptor-ref name="defaultStack" />
			</interceptor-stack>
		</interceptors>

		<!-- 2.将myStack设置默认拦截器栈，对当前package内所有Action生效 -->
    		<default-interceptor-ref name="myStack" />

		<action name="book_*" class="cn.itcast.action.BookAction" method="{1}">
			<!-- 3.给某个action注册拦截器 -->
			<interceptor-ref name="myStack"/>
			<result name="success">/WEB-INF/page/hello.jsp</result>
		</action>
	</package>

注意: 有1和2,就不要配3了
      2和3不要一起配
