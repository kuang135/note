面向对象最重要的概念就是类（Class）和实例（Instance），
类是抽象的模板，实例是根据类创建出来的一个个具体的“对象”，每个对象都拥有相同的方法，但各自的数据可能不同。

类
class后面紧接着是类名，即Student，
类名通常是大写开头的单词，紧接着是(object)，表示该类是从哪个类继承下来的，支持多继承
	class Student(object):
		pass

类
__init__ 类似构造函数
每个方法的第一个参数都是self
	class Student(object):
		def __init__(self, name, score):
			self.name = name
			self.score = score
		def print_score(self):
			print('%s: %s' % (self.name, self.score))

对象		
	>>> a = Student() --等于-- Student.__init__(a)
	
和静态语言不同，Python允许对实例变量绑定任何数据，
也就是说，对于两个实例变量，虽然它们都是同一个类的不同实例，但拥有的变量名称都可能不同：
	>>> bart = Student('Bart Simpson', 59)
	>>> lisa = Student('Lisa Simpson', 87)
	>>> bart.age = 8
	>>> bart.age
	8
	>>> lisa.age
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	AttributeError: 'Student' object has no attribute 'age'