在Python中，实例的变量名如果以__开头，就变成了一个私有变量（private），只有内部可以访问，外部不能访问
	class Student(object):
		def __init__(self, name, score):
			self.name = name
			self.score = score
		def print_score(self):
			print('%s: %s' % (self.name, self.score))
		def get_name(self):
			return self.__name
		def get_score(self):
			return self.__score
		def set_score(self, score):
			self.__score = score
		def set_score(self, score):
			if 0 <= score <= 100:
				self.__score = score
			else:
				raise ValueError('bad score')
			
			
在Python中，变量名类似__xxx__的，也就是以双下划线开头，并且以双下划线结尾的，是特殊变量，
特殊变量是可以直接访问的，不是private变量

以一个下划线开头的实例变量名，比如_name，外部是可以访问的，
但表达的意思是，"虽然我可以被访问，但是，请把我视为私有变量，不要随意访问"

不能直接访问__name是因为Python解释器对外把__name变量改成了_Student__name，
所以，仍然可以通过_Student__name来访问__name变量，
但是，不同版本的Python解释器可能会把__name改成不同的变量名
	
	
