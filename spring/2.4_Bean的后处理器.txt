Bean的后处理器: 在不改变代码的情况下,对Bean进行增强.
		AOP的自动代理就是用这个技术来完成的.

Spring通过多态和策略调用BeanPostProcessor的实现类,可以在初始化前后对所有的Bean进行处理.

使用方法:
    1.写一个类实现BeanPostProcessor,覆盖其方法
	public class MyPostProcessor implements BeanPostProcessor{
	    @Override
	    public Object postProcessAfterInitialization(Object bean, String name) throws BeansException {	
			//参数bean指配置的所有Bean对象
			//参数name指配置的所有Bean的名字(id)
			System.out.println(name+"初始化后增强...");
			... //增强代码,可以产生一个代理对象返回
			return bean;
	    }
  	    @Override
	    public Object postProcessBeforeInitialization(Object bean, String name) throws BeansException {
			System.out.println(name+"初始化前增强...");
			return bean;//返回bean,让spring去初始化
	    }
	}

    2.配置
	<!-- Spring多态调用,不需要配名字 -->
	<bean class="cn.itcast.processor.UserPostProcessor"></bean>