AspectJ切入点语法,Spring只支持部分

AspectJ切入点，是通过函数进行配置 
    execution 执行
	语法：execution(<访问修饰符>?<返回类型><方法名>(<参数>)<异常>)
	      execution(* *(..))  第一个* 任意返回类型 ， 第二个* 任意方法名 , .. 任意参数 
	      execution(* cn.itcast.service.UserService.*(..)) 匹配UserService所有方法 
	      execution(* cn.itcast.service.UserService+.*(..)) 匹配UserService子类所有方法 
	      execution(* cn.itcast.service..*.*(..)) 第一个.. 任意子包 *.*任何类的任何方法
	      
    within 根据包匹配
	语法：within(包名..*) 
	      within(cn.itcast.service..*) 拦截service下所有类的方法
	      
  this 根据目标类型匹配
	语法：this(类名) 
	      this(cn.itcast.service.UserService) 拦截 UserService所有方法 (包括代理对象)

  target 根据目标类型匹配
	语法：target(类名)
	      target(cn.itcast.service.UserService) 拦截UserService所有方法 （不包括代理对象 ）

  args 根据参数匹配
	args(java.lang.String) 拦截所有参数为String类的方法 

  bean 根据bean name匹配 
	bean(userService) 拦截bean id/name为userService对象所有方法 