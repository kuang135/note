步骤:
    1.导入jar包
	com.springsource.org.aopalliance-1.0.0.jar
	spring-aop-3.2.0.RELEASE.jar
	com.springsource.org.aspectj.weaver-1.6.8.RELEASE.jar
	spring-aspects-3.2.0.RELEASE.jar Spring
    
    2.编写Advice
	public class MyAroundAdvice {
	    public Object around(ProceedingJoinPoint proceedingJoinPoint) throws Throwable{
		long begin=System.currentTimeMillis();
		Object result=proceedingJoinPoint.proceed();
		long end=System.currentTimeMillis();
		System.out.print(proceedingJoinPoint.toShortString()+"的执行时间是:"+(end-begin)+"毫秒.");
		return result;
	    }
	}

    3.配置<aop:config>,参考xsd-config.html引入xsd
	<!-- 配置Advice通知 -->
	<bean id="myAroundAdvice" class="cn.itcast.advice.MyAroundAdvice" />
	<!-- AOP相关配置  -->
	<aop:config>
		<!-- aspect配置AspectJ的AOP切面,可以包含多个通知和多个切入点 -->
		<aop:aspect ref="myAroundAdvice">
			 <aop:pointcut expression="bean(*Dao)" id="myPointcut"/> 
			 <aop:around method="around" pointcut-ref="myPointcut"/>
			<!-- 
				aop:before 前置通知
				aop:afterReturning 后置通知
				aop:around 环绕通知
				aop:afterThrowing 异常通知
				aop:after 最终通知
				aop:declare-parents 引介通知
				aop:pointcut 切入点
			 -->
			 <!-- 
			 	method 方法名
			 	pointcut-ref 引用切入点的id
			 	returning 配置返回值,在抛出通知中参数名称
			 	throwing 配置异常,在抛出通知中参数名称
			  -->
		</aop:aspect>
	</aop:config>
   
