AspectJ是一个基于Java语言的AOP框架，Spring2.0开始，Spring AOP引入对Aspect的支持

AspectJ的AOP编程
	1.切入点,通过配置完成
	2.通知,通过代码完成

通知的6中类型
	1. Before 前置通知 -- 权限控制,记录访问日志 
	2. AfterReturning 后置通知
	3. Around 环绕通知 -- 运行方法时间监控,事务管理,权限控制,缓存,日志
	4. AfterThrowing 抛出通知 -- 目标方法异常,日志记录异常,将异常信息发送邮件给管理员
	5. After 最终final通知 -- 释放资源
	6. DeclareParents 引介通知

	Around环绕通知什么都可以 
			try{
			    前置通知… 
			    执行目标方法
			    后置通知…
			}catch {
			    异常通知…
			}finally {
			    最终通知…
			}


AspectJ中Spring的api:
    org.aspectj.lang.JoinPoint
	|
	+org.aspectj.lang.ProceedingJoinPoint

    JoinPoint的方法
	Object[] getArgs();//拿到方法的参数
	Object getTarget();//拿到被代理的对象
	Signature getSignature();//方法签名
	String	toLongString();//方法全名
	String	toShortString();//方法短名
   
    ProceedingJoinPoint的方法
	Object proceed();//执行
	Object	proceed(Object[] args);//执行(带参数)


